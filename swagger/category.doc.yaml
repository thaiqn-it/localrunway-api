components:
  schemas:
    Category:
      type: object
      required:
        - name
      properties:
        _id:
          type: string
          description: The auto generate id of Category
        name:
          type: string
          description: Name of the category
      example:
        _id: 60ae5abe1bca945ff4b53225
        name: ao dai
  requestBodies:
    categoryReqBody:
      description: a json object contain category infomation
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
          example:
            name: ao dai      
tags:
  name: Categories
  description: The Category Management Apis
/api/categories:
  get:
    summary: Get all Category
    tags: [Categories]
    responses:
      200:
        description: The list of all category sort by name
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  type: array
                  items:
                    $ref: "#/components/schemas/Category"
      500:
        description: Internal server error          
  post:
    summary: "Insert new category"
    tags: [Categories]
    requestBody:
      $ref: "#/components/requestBodies/categoryReqBody"
    responses:
      200:
        description: the updated category
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref : '#/components/schemas/Category' 
      500:
        description: bad request
/api/categories/{id}:
  put:
    summary: "update category by id"
    tags: [Categories]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The category id
        example: 60ae5abe1bca945ff4b53225  
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Category"
    responses:
      200:
        description: the updated category
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/Category'
      500:
        description: bad request or server error
  get:
    summary: "get category by id"
    tags: [Categories]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The category id
        example: 60ae5abe1bca945ff4b53225  
    responses:
      200:
        description: the category is found
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/Category'
      404:
        description: the category is not found
  delete:
    summary: "delete the category id"
    tags: [Categories]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The category id
        example: 60ae5abe1bca945ff4b53225  
    responses:
      200:
        description: the category is found and deleted
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/Category'
      500:
        description: the category is not found
