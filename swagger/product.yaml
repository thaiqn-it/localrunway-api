paths:
  /api/products/{id}: # path of the user from your endpoint
    get: # endpoint request type (put request)
      tags:
        - Product
      summary: Return product by id
      produces:
        - application/json
      parameters: # request parameters
        - name: id # name of parameter passed
          in: path # parameters in the path
          type: "string"
          description: path parameter takes the product id
          required: true
      responses:
        '200':
          description: get product
          content:
            application/json:
              schema:
                type: array
                $ref: "#/definitions/Product"
        '404':
          description: product not found

  /api/products/{id}/hashtags:
    get: 
      tags:
        - Product
      summary: Return Hashtags by product id
      produces:
        - application/json
      parameters: 
        - name: id 
          in: path 
          type: "string"
          description: path parameter takes the product id
          required: true
      responses:
        200:
          description: get hashtag
          content:
            application/json:
              schema:
                type: array
                $ref: "#/definitions/Hashtag"
        500:
          description: Internal server error
  
  /api/products/:
    get: 
      tags:
        - Product
      summary: Return Products by using filter
      produces:
        - application/json
      parameters: 
        - name: categoryId 
          in: query 
          type: "string"
          description: categoryId query string 
        - name: sort 
          in: query 
          type: "string"
          description: sort condition selected by user query string
        - name: queryValue 
          in: query 
          type: "string"
          description: search query value by user query string  
        - name: sizes 
          in: query 
          type: "string"
          description: sizes of products query string 
        - name: page 
          in: query 
          type: "string"
          description: pagination tracking query string 
      responses:
        200:
          description: get product by conditions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/ConditionalProduct"
        500:
          description: Internal server error

  /api/products/:id:
    delete:
      tags:
        - "Product"
      summary: "Delete a product by Id"
      parameters:
      - name: id
        in: path
        required: true
      responses:
        200:
          description: delete successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/definitions/Product"
        500:
          description: Internal server error

  /api/products:
    post:
      tags:
        - "Product"
      summary: "Create a product"
      parameters:
      - name: name 
        in: body 
        type: "string"
        description: name of product 
        required: true  
      - name: color 
        in: body 
        type: "string"
        description: color of product 
        required: true  
      - name: size 
        in: body 
        type: "string"
        description: size of product   
        required: true       
      - name: price 
        in: body 
        type: "integer"
        description: price of product 
        required: true  
      - name: quantity 
        in: body 
        type: "integer"
        description: quantity of product
        required: true  
      - name: status 
        in: body 
        type: "string"
        description: status of product 
        required: true  
      - name: type 
        in: body 
        type: "string"
        description: type of product     
        required: true     
      - name: description 
        in: body 
        type: "string"
        description: description of product 
        required: true  
      - name: brandId 
        in: body 
        type: "string"
        description: brandId of product
        required: true     
      - name: categoryId 
        in: body 
        type: "string"
        description: categoryId of product    
        required: true  
      responses:
        200:
          description: create successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/definitions/Product"
        500:
          description: Internal server error
  /api/products/:id/:
    put:
      tags:
        - "Product"
      summary: "Modify a product"
      parameters:
      - name: id 
        in: path 
        type: "string"
        description: id of product 
        required: true
      - name: name 
        in: body 
        type: "string"
        description: name of product 
        required: true
      - name: color 
        in: body 
        type: "string"
        description: color of product 
        required: true
      - name: size 
        in: body 
        type: "string"
        description: size of product        
        required: true
      - name: price 
        in: body 
        type: "integer"
        description: price of product 
        required: true
      - name: quantity 
        in: body 
        type: "integer"
        description: quantity of product 
        required: true
      - name: status 
        in: body 
        type: "string"
        description: status of product 
        required: true
      - name: type 
        in: body 
        type: "string"
        description: type of product     
        required: true   
      - name: description 
        in: body 
        type: "string"
        description: description of product 
        required: true
      - name: brandId 
        in: body 
        type: "string"
        description: brandId of product  
        required: true   
      - name: categoryId 
        in: body 
        type: "string"
        description: categoryId of product  
        required: true   
      responses:
        200:
          description: add successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/definitions/Product"
        500:
          description: Internal server error
            
definitions: # Schema definition for the request body
  Product:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: The auto generate id of Localbrand
      brandId:
        type: "string"
        format: "uuid"
        description: The Foreign key from Localbrand
      categoryId:
          type: string
          fommat: uuid
          description: The Foreign key from Catgory
      status:
          type: string
          enum : ["ACTIVE", "INACTIVE"]
          description: the status of Localbrand
      price:
          type: number
          description: The price of product
      color:
          type: string
          description: The color of the product
      quantiy:
          type: number
          description: The quantity of product
      parentId:
          type: string
          fommat: uuid
          description: the parents's product id of this product refer to
      size:
          type: string
          description: the size of the product
      type:
          type: string
          enum:  
          - "ACTIVE"
          - "INACTIVE"
          description: the type of the product
    xml:
      name: "Product"

  Hashtag: 
    type: object
    properties:
      id:
        type: "string"
        description: The auto generate id of Localbrand
    xml:
      name: "Hashtag"

  ConditionalProduct:
    type: object
    properties:
      totalItems:
        type: integer
        description: The total items of search values
      limit:
        type: integer
        description: The limit items on each page
      totalPages:
        type: integer
        description: The total pages
      page:
        type: integer
        description: the current page
      pagingCounter:
        type: integer
        description: The counter for tracking page
      hasPrevPage:
        type: boolean
        description: The boolean value for checking page has prev or not
      hasNextPage:
        type: boolean
        description: The boolean value for checking page has next or not
      prevPage:
        type: integer
        description: total pages before
      nextPage:
        type: integer
        description: total pages left
      products:
        type: array
        items:
          $ref: '#/definitions/Product'
