components:
  schemas:
    Product:
      type: "object"
      properties:
        _id:
          type: "string"
          format: "uuid"
          description: The auto generate id of Localbrand
        brandId:
          type: "string"
          required: true
          format: "uuid"
          description: The Foreign key from Localbrand
        categoryId:
            type: string
            required: true
            format: uuid
            description: The Foreign key from Catgory
        thumbnailUrl:
            type: string
            required: true
            description: the Url of thumbnail Image
        name:
            type: string
            required: true
            description: the name of the Product
        description:
            type: string
            required: true
            description: the description of the product        
        status:
            type: string
            enum : ["ACTIVE", "INACTIVE"]
            description: the status of Localbrand
        price:
            type: number
            description: The price of product
            required: true
        color:
            type: string
            description: The color of the product
            required: true
        quantiy:
            type: number
            description: The quantity of product
            required: true
        parentId:
            type: string
            format: uuid
            description: the parents's product id of this product refer to
        size:
            type: string
            description: the size of the product
        type:
            type: string
            enum:  [GP , DP]
            description: the type of the product
            required: true
        ratingTotal:
          type: number
          description: the total rating of product
        ratingCount:
          type: number
          description: the count rating of product           
        bulkSearch:
          type: string
          description:
        sizeSpecs:
          type: string
          description:  
        minWeight:
          type: number
        maxWeight:
          type: number
        minHeight:
          type: number
        maxHeight:
          type: number 
        minBust:
          type: number
        maxBust:
          type: number
        minWaist:
          type: number
        maxWaist:
          type: number          
        minHip:
          type: number
        maxHip:
          type: number 
        createAt:
          type: string
          format: date-time
          description: the time of this product create
        updateAt:
          type: string
          format: date-time
          description: the lateset time of this product update datetime
      example: 
        id: 60ec7107e135d96ef4775941
        brandId: 60ca1b1dfe24b14ac8a92e99
        categoryId: 60db5729e1dc165f4082e628
        thumbanailUrl: https://firebasestorage.googleapis.com/v0/b/image-e6757.appspot.com/o/jacket-ontop-local-brand-viet-nam.2jpg-800x800.jpg?alt=media&token=4f02c71e-1c7a-45d0-abc9-c5885ebb055a
        name: newProduct2
        description: new Product 2021 Hot
        status: "ACTIVE"
        price: 100000
        color: pink
        quantity: 1000
        parentId: 60db5666e1dc165f4082e626
        size: M
        type: DP
        ratingTotal: 0
        ratingCount: 1
        bulkSearch: "newProduct2 pink"
        sizeSpecs: 
        minWeight: 0
        maxWeight: 200
        minHeight: 0
        maxHeight: 250
        minBust: 0
        maxBust: 200
        minWaist: 0
        maxWaist: 200
        minHip: 0
        maxHip: 200
        createAt: 2021-07-12T16:42:47.869Z
        updateAt: 2021-07-12T16:42:47.898Z
        
        
    

    ProductHashtag:
      type: object
      properties:
        id: 
          type: "string"
          description: The auto generate id of producthashtag
        productId: 
          type: "string"
          description: The id of product
        hashtagId: 
          type: "string"
          description: The id of hashtag
    ProductMedia:
      type: object
      properties:
        id: 
          type: "string"
          description: The auto generate id of producthashtag
        productId: 
          type: "string"
          description: The id of product
        mediaUrl: 
          type: "string"
          description: The url of media
        rank:
          type: number
          description: the rank of the product media  
          
paths:
  /api/products/{id}: 
    get: 
      tags:
        - Product
      summary: Return product by id
      produces:
        - application/json
      parameters: 
        - name: id 
          in: path 
          type: "string"
          description: path parameter takes the product id
          required: true
        - name: populates
          in: query
          type: array
          description: query option 
          example: ["category", "localbrand"] 
          enum: ["category", "localbrand", "media" , "all"]
      responses:
        '200':
          description: get product
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: "#/definitions/GetProductRes"
        '404':
          description: product not found
    delete:
      tags:
        - "Product"
      summary: "Delete a product by Id"
      parameters:
      - name: id
        in: path
        required: true
      responses:
        200:
          description: delete successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Product"
        500:
          description: Internal server error
    put:
      tags:
        - "Product"
      summary: "Modify a product"
      parameters:
      - name: id 
        in: path 
        type: "string"
        description: id of product 
        required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/ProductReqBody"
      responses:
        200:
          description: add successfully
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Product"
        500:
          description: Internal server error      

  /api/products/{id}/hashtags:
    get: 
      tags: [ProductHashtag]
      summary: Return Hashtags by product id
      produces:
        - application/json
      parameters: 
        - name: id 
          in: path 
          type: "string"
          description: path parameter takes the product id
          required: true
      responses:
        200:
          description: get hashtag
          content:
            application/json:
              schema:
                type: object
                properties:
                  hashtag:
                    type: array
                    items: 
                      $ref: "#/components/schemas/Hashtag"
        500:
          description: Internal server error
    post:
      summary: "Insert hashtag product"
      produces:
      - application/json
      parameters: 
        - name: productId 
          in: path 
          type: "string"
          description: path parameter takes the product id
          required: true
      tags: [ProductHashtag]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hashtagId:
                  type: string
                  description: path parameter takes the product id
                  required: true  
      responses:
        200:
          description: the inserted category
          content:
            application/json:
              schema:
                type: object
                properties:
                  ProductHashtag:
                      $ref: '#/components/schemas/ProductHashtag'
        500:
          description: bad request
  /api/products/{id}/hashtags/{hashtagId}:
    delete:
      tags:
        - "ProductHashtag"
      summary: "Delete a hashtag of a product by hashtagId and productId"
      parameters:
      - name: id
        in: path
        required: true
      - name: hashtagId
        in: path
        required: true
      responses:
        200:
          description: the hashtag is deleted 
          content:
            application/json:
              schema:
                type: object
                properties:
                  ProductHashtag:
                    $ref: '#/components/schemas/ProductHashtag'
        500:
          description: Internal server error
  /api/products:
    get: 
      tags:
        - Product
      summary: Return Products by using filter
      produces:
        - application/json
      parameters: 
        - name: categoryId 
          in: query 
          type: "string"
          description: categoryId query string 
        - name: sort 
          in: query 
          type: "string"
          description: sort condition selected by user query string
        - name: queryValue 
          in: query 
          type: "string"
          description: search query value by user query string  
        - name: sizes 
          in: query 
          type: "string"
          description: sizes of products query string 
        - name: page 
          in: query 
          type: "string"
          description: pagination tracking query string 
        - name: brandIds 
          in: query 
          type: "string"
          description: brandId of the product
        - name: prices 
          in: query 
          type: number
          description: the price range of the product   
        - name: type
          in: query 
          type: number
          description: the type of the product
        - name: parentId
          in: query 
          type: number
          description: the parentId of the product           
      responses:
        200:
          description: get product by conditions
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    type: array
                    items:
                      $ref: "#/definitions/ConditionalProduct"
        500:
          description: Internal server error
    post:
      tags:
        - "Product"
      summary: "Create a product"
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/ProductReqBody'   
      responses:
        200:
          description: create successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                    product:
                      $ref: "#/components/schemas/Product"
        500:
          description: Internal server error

 
    



definitions: # Schema definition for the request body
  

  ConditionalProduct:
    type: object
    properties:
      products:
        type: array
        items:
          $ref: '#/components/schemas/Product'
      totalItems:
        type: integer
        description: The total items of search values
      limit:
        type: integer
        description: The limit items on each page
      totalPages:
        type: integer
        description: The total pages
      page:
        type: integer
        description: the current page
      pagingCounter:
        type: integer
        description: The counter for tracking page
      hasPrevPage:
        type: boolean
        description: The boolean value for checking page has prev or not
      hasNextPage:
        type: boolean
        description: The boolean value for checking page has next or not
      prevPage:
        type: integer
        description: total pages before
      nextPage:
        type: integer
        description: total pages left
  ProductReqBody:
    description: A Json object contain product's Data
    type: object
    properties:
      name:
        type: string
        required: true
        description: the name of the Product
        example: newProduct
      description:
        type: string
        required: true
        description: the description of the product   
        example: new Product 2021 Hot     
      status:
        type: string
        enum : ["ACTIVE", "INACTIVE"]
        description: the status of Localbrand
        example: "ACTIVE"
      price:
        type: number
        description: The price of product
        required: true
        example: 1000
      color:
        type: string
        description: The color of the product
        required: true
        example: pink
      quantity:
        type: number
        description: The quantity of product
        required: true
        example: 1000
      parentId:
        type: string
        format: uuid
        description: the parents's product id of this product refer to
        example: 60db5666e1dc165f4082e626
      size:
        type: string
        description: the size of the product
        example: S
      type:
        type: string
        enum:  ["GP" , "DP"]
        description: the type of the product
        required: true
        example: DP
      thumbnailUrl:
        required: true
        type: string
        description: the thumbanailUrl of the product
        example: https://firebasestorage.googleapis.com/v0/b/image-e6757.appspot.com/o/jacket-ontop-local-brand-viet-nam.2jpg-800x800.jpg?alt=media&token=4f02c71e-1c7a-45d0-abc9-c5885ebb055a
      media:
        required: true
        type: array
        items:
          type: object
          properties:
            rank: 
              type: number
            mediaUrl:
              type: string
        description: the array contain the product's mediaUrl
        example:
          - rank: 1
            mediaUrl: https://firebasestorage.googleapis.com/v0/b/image-e6757.appspot.com/o/jacket-ontop-local-brand-viet-nam.2jpg-800x800.jpg?alt=media&token=4f02c71e-1c7a-45d0-abc9-c5885ebb055a      
      brandId:
        type: string
        description: the Localbrand's Id
        example: 60ca1b1dfe24b14ac8a92e99
      categoryId:
        type: string
        description: the categoryId of product
        example: 60db5729e1dc165f4082e628  
  GetProductRes:
    description: A Json object contain product's Data    
    type: "object"
    properties:
        _id:
          type: "string"
          format: "uuid"
          description: The auto generate id of Localbrand
        brandId:
          type: "string"
          required: true
          format: "uuid"
          description: The Foreign key from Localbrand
        categoryId:
            type: string
            required: true
            format: uuid
            description: The Foreign key from Catgory
        thumbnailUrl:
            type: string
            required: true
            description: the Url of thumbnail Image
        name:
            type: string
            required: true
            description: the name of the Product
        description:
            type: string
            required: true
            description: the description of the product        
        status:
            type: string
            enum : ["ACTIVE", "INACTIVE"]
            description: the status of Localbrand
        price:
            type: number
            description: The price of product
            required: true
        color:
            type: string
            description: The color of the product
            required: true
        quantiy:
            type: number
            description: The quantity of product
            required: true
        parentId:
            type: string
            format: uuid
            description: the parents's product id of this product refer to
        size:
            type: string
            description: the size of the product
        type:
            type: string
            enum:  [GP , DP]
            description: the type of the product
            required: true
        ratingTotal:
          type: number
          description: the total rating of product
        ratingCount:
          type: number
          description: the count rating of product           
        bulkSearch:
          type: string
          description:
        sizeSpecs:
          type: string
          description:  
        minWeight:
          type: number
        maxWeight:
          type: number
        minHeight:
          type: number
        maxHeight:
          type: number 
        minBust:
          type: number
        maxBust:
          type: number
        minWaist:
          type: number
        maxWaist:
          type: number          
        minHip:
          type: number
        maxHip:
          type: number 
        media:
          type: array
          items:
            $ref: "#/components/schemas/ProductMedia"
        hashtags:
          type: array
          items:    
            type: object
            properties:
              _id:
                type: string
              name:
                type: string  
        category:
          type: object
          properties:
            _id:
              type: string
            name:
              type: string 
        localbrand:
          $ref: "#/components/schemas/Localbrand"             
        createAt:
          type: string
          format: date-time
          description: the time of this product create
        updateAt:
          type: string
          format: date-time
          description: the lateset time of this product update datetime      

